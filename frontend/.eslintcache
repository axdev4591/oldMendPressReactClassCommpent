[{"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\serviceWorker.js":"1","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\CartPrice\\index.js":"2","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\NormalInput\\index.js":"3","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Products.js":"4","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\index.js":"5","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\PrivateRoute.js":"6","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\authReducers.js":"7","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\productReducers.js":"8","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\cartReducers.js":"9","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ControlPanel\\index.js":"10","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Login\\index.js":"11","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ForgetPassword\\index.js":"12","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Home\\index.js":"13","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ProductDetails\\index.js":"14","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\index.js":"15","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Orders\\index.js":"16","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\cartActions.js":"17","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\Header.js":"18","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\constants\\index.js":"19","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\MobileTypeInput\\index.js":"20","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\RadioButton\\index.js":"21","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\TopHeader\\TopHeader.js":"22","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Product\\index.js":"23","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\App.js":"24","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ThankYou\\index.js":"25","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Shop\\index.js":"26","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\productActions.js":"27","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\AddressForm\\index.js":"28","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\SubmitGradientButton\\index.js":"29","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\BottomHeader\\BottomHeader.js":"30","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\index.js":"31","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\authActions.js":"32","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Logo\\index.js":"33","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\ShopStore.js":"34","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\DeliveryAddress\\index.js":"35","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\CartItem\\index.js":"36","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\MainHeader\\MainHeader.js":"37","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Signup\\index.js":"38","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Error\\index.js":"39","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\QuantityControl\\index.js":"40","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsScreen.js":"41","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsActions.js":"42","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsConstants.js":"43","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProdReducer.js":"44"},{"size":4951,"mtime":1572103982000,"results":"45","hashOfConfig":"46"},{"size":1153,"mtime":1609931754634,"results":"47","hashOfConfig":"46"},{"size":1232,"mtime":1572103982000,"results":"48","hashOfConfig":"46"},{"size":4689,"mtime":1609536333920,"results":"49","hashOfConfig":"46"},{"size":463,"mtime":1572103982000,"results":"50","hashOfConfig":"46"},{"size":629,"mtime":1572103982000,"results":"51","hashOfConfig":"46"},{"size":737,"mtime":1609690457158,"results":"52","hashOfConfig":"46"},{"size":639,"mtime":1572103982000,"results":"53","hashOfConfig":"46"},{"size":3410,"mtime":1609437890641,"results":"54","hashOfConfig":"46"},{"size":259,"mtime":1572103982000,"results":"55","hashOfConfig":"46"},{"size":4656,"mtime":1609973103439,"results":"56","hashOfConfig":"46"},{"size":1812,"mtime":1609973216298,"results":"57","hashOfConfig":"46"},{"size":369,"mtime":1609695267634,"results":"58","hashOfConfig":"46"},{"size":7040,"mtime":1609931532389,"results":"59","hashOfConfig":"46"},{"size":14850,"mtime":1609786467160,"results":"60","hashOfConfig":"46"},{"size":7832,"mtime":1610135139232,"results":"61","hashOfConfig":"46"},{"size":2814,"mtime":1572103982000,"results":"62","hashOfConfig":"46"},{"size":1719,"mtime":1609695496573,"results":"63","hashOfConfig":"46"},{"size":48,"mtime":1572103982000,"results":"64","hashOfConfig":"46"},{"size":424,"mtime":1572103982000,"results":"65","hashOfConfig":"46"},{"size":394,"mtime":1572103982000,"results":"66","hashOfConfig":"46"},{"size":3098,"mtime":1609793097989,"results":"67","hashOfConfig":"46"},{"size":687,"mtime":1609886091921,"results":"68","hashOfConfig":"46"},{"size":2539,"mtime":1610041981947,"results":"69","hashOfConfig":"46"},{"size":835,"mtime":1609449167666,"results":"70","hashOfConfig":"46"},{"size":254,"mtime":1572103982000,"results":"71","hashOfConfig":"46"},{"size":1952,"mtime":1609536320374,"results":"72","hashOfConfig":"46"},{"size":4792,"mtime":1572103982000,"results":"73","hashOfConfig":"46"},{"size":356,"mtime":1572103982000,"results":"74","hashOfConfig":"46"},{"size":2202,"mtime":1609932739130,"results":"75","hashOfConfig":"46"},{"size":5547,"mtime":1609439477855,"results":"76","hashOfConfig":"46"},{"size":3165,"mtime":1609709798170,"results":"77","hashOfConfig":"46"},{"size":355,"mtime":1610021687343,"results":"78","hashOfConfig":"46"},{"size":1077,"mtime":1609795858411,"results":"79","hashOfConfig":"46"},{"size":974,"mtime":1572103982000,"results":"80","hashOfConfig":"46"},{"size":1294,"mtime":1609931882708,"results":"81","hashOfConfig":"46"},{"size":1242,"mtime":1609932222215,"results":"82","hashOfConfig":"46"},{"size":7140,"mtime":1609973043691,"results":"83","hashOfConfig":"46"},{"size":141,"mtime":1572103982000,"results":"84","hashOfConfig":"46"},{"size":617,"mtime":1572103982000,"results":"85","hashOfConfig":"46"},{"size":11137,"mtime":1610292917706,"results":"86","hashOfConfig":"46"},{"size":5961,"mtime":1610288752713,"results":"87","hashOfConfig":"46"},{"size":1224,"mtime":1610042386146,"results":"88","hashOfConfig":"46"},{"size":3329,"mtime":1610061823347,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1fusxmn",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"95"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"95"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"95"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"95"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"95"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"95"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"95"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\serviceWorker.js",[],["193","194"],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\CartPrice\\index.js",[],["195","196"],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\NormalInput\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Products.js",["197","198","199"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as productActions from '../../../store/actions/productActions';\nimport { connect } from 'react-redux';\nimport './style.css';\nimport Product from './Product';\n\nclass Products extends Component{\n\n    state = {\n        slug: 'Toutes Nos Oeuvres'\n    }\n\n    componentDidMount() {\n        const slug = this.props.match.params.slug  == 'Toutes Nos Oeuvres' ? '' : this.props.match.params.slug\n        this.getProducts(slug);\n        this.props.getCategories();\n    }\n\n    getProducts = (categorySlug = '', filter = null) => {\n       \n        this.props.getProducts(categorySlug, filter)\n        .then(response => {\n\n            console.log(\"aahaha\"+response);\n\n            this.setState({\n                 products: response.message\n           })\n        });\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.match.params.slug != prevProps.match.params.slug){\n            this.getProducts(this.props.match.params.slug);\n        }\n\n        \n    }\n\n    applyFilter = (filter) => {\n        const slug = this.props.match.params.slug == 'Toutes Nos Oeuvres' ? '' : this.props.match.params.slug\n        this.getProducts(slug, filter);\n    }\n\n    categoryTree(categories){\n        var categoriesAr = [];\n        for(var value of categories){\n\n            categoriesAr.push(\n                    <li key={value.slug}>\n                        <Link to={`/products/${value.slug}`}>{value.name}</Link>\n                        {value.children.length > 0 ? (<ul>{this.categoryTree(value.children)}</ul>) : null}\n                    </li>\n            );\n        }\n\n        return categoriesAr;\n    }\n\n    render() {\n\n        const slug = Object.keys(this.props.match.params).length > 0 ? this.props.match.params.slug : this.state.slug;\n\n        \n        \n        return (\n\n            <div className=\"Content\">\n                    <div className=\"ContentTitle\">\n                        <h2 className=\"CategoryTitle\">{slug}</h2>\n                    </div>\n                    <div className=\"ContentBody\">\n                        <div className=\"SideMenu\">\n                            <h3 className=\"SideMenuTitle\">Filtres</h3>\n                            <div className=\"Filter\">\n                                <p className=\"FilterTitle\">Categories</p>\n                                <ul>\n                                    {\n                                        this.props.products.categories.length > 0 ? \n                                        this.categoryTree(this.props.products.categories) : null\n                                    }\n                                </ul>\n                            </div>\n                            \n                           <div style={{marginTop: \"12px\"}} className=\"Filter\">\n                               <p className=\"FilterTitle\">Prix</p>\n                               <div>\n                                <button onClick={() => this.applyFilter({price:1} )} className=\"FilterButton\">Tri croissant</button>\n                               </div>\n                               <div>\n                                    <button onClick={() => this.applyFilter({price: -1})} className=\"FilterButton\">Tri décroissant</button>\n                               </div>\n                               \n                           </div>\n                       \n                        </div>\n                        \n                        <div className=\"MainContent\">\n\n                        <div className=\"ProductArea\">\n                            {\n                                this.props.products.products.map(product => <Product\n                                    key={product._id}\n                                    id={product._id}\n                                    name={product.name}\n                                    price={product.price}\n                                    imageUrl={product.imageUrl}\n                                    slug={product.slug}\n                                />)\n                            }\n                            \n                        </div>\n\n                            \n                        </div>\n\n                    </div>\n                </div>\n            \n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getProducts: (categorySlug, filter) => dispatch(productActions.getProducts(categorySlug, filter)),\n        getCategories: () => dispatch(productActions.getCategories())\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.products\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\PrivateRoute.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\authReducers.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\productReducers.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\reducers\\cartReducers.js",["200"],"import { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART } from \"../actions/cartActions\"\n\nconst initState = {\n    cartItem: [],\n    totalAmount: 0,\n    cartCount: 0\n}\n\nconst cartReducers = (state = initState, actions) => {\n    switch(actions.type){\n        case ADD_TO_CART:\n            const cartItem = state.cartItem;\n            let updatedCartItem = [];\n            let totalAmount;\n\n            const itemCount = state.cartItem.filter(item => item.product === actions.cartItem.product);\n\n            if(itemCount.length === 0){\n                updatedCartItem = [\n                    ...cartItem,\n                    {\n                        product: actions.cartItem.product,\n                        name: actions.cartItem.name,\n                        imageUrl: actions.cartItem.imageUrl,\n                        price: actions.cartItem.price,\n                        quantity: actions.cartItem.quantity,\n                        total: actions.cartItem.quantity * actions.cartItem.price\n                    }\n                ];\n            }else{\n                updatedCartItem = cartItem.map(item => \n                    item.product === actions.cartItem.product ?\n                    {\n                        ...item,\n                        quantity: item.quantity + actions.cartItem.quantity,\n                        total: item.total + actions.cartItem.price\n                    } : item\n                    )\n            }\n            totalAmount = state.totalAmount + actions.cartItem.price\n            state = {\n                cartItem: updatedCartItem,\n                totalAmount: totalAmount,\n                cartCount: state.cartCount + 1\n            }\n            break;\n        case GET_CART_DETAILS:\n            const cItem = actions.cartItems.cart;\n            let totalAmt = 0;\n            let quantityCount = 0;\n            const updateCartItem = cItem.map(item => {\n                totalAmt += item.total;\n                quantityCount += item.quantity;\n                return {\n                    product: item.product._id,\n                    name: item.product.name,\n                    imageUrl: item.product.imageUrl,\n                    price: item.price,\n                    quantity: item.quantity,\n                    total: item.total\n                }\n            })\n            state = {\n                cartItem: updateCartItem,\n                totalAmount: totalAmt,\n                cartCount: quantityCount\n            }\n            break;\n        case UPDATE_CART:\n            const updateItem = actions.item;\n            const cartItems = state.cartItem.map(item => {\n                return item.product === updateItem.productId ? \n                {\n                    ...item,\n                    quantity: updateItem.quantity,\n                    total: updateItem.total\n                } : item\n            });\n            state = {\n                cartItem: cartItems,\n                totalAmount: parseFloat(state.totalAmount) + parseFloat(updateItem.price * updateItem.newQuantity),\n                cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\n            }\n            break;\n        case CLEAR_CART:\n            state = {\n                cartItem: [],\n                totalAmount: 0,\n                cartCount: 0\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\n\nexport default cartReducers;","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ControlPanel\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Login\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ForgetPassword\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Home\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ProductDetails\\index.js",["201"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../../components/Header/Header';\nimport { connect } from 'react-redux';\nimport * as cartActions from '../../store/actions/cartActions';\nimport * as authActions from '../../store/actions/authActions';\n\nimport './style.css';\nimport { base_url } from '../../constants';\n\nclass ProductDetails extends Component{\n\n    state = {\n        product: null,\n        redirectToReferrer: false\n    }\n\n    componentDidMount() {\n\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n                if(result){\n                    this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId)\n                    .then(response => {\n                        console.log(response);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        }\n\n                \n\n        \n        const { category, slug } = this.props.match.params;\n        fetch(`${base_url}/products/${category}/${slug}`)\n        .then(response => response.json())\n        .then(jsonResponse => {\n\n            if(jsonResponse.hasOwnProperty('message')){\n                console.log(jsonResponse);\n                this.setState({\n                    product: jsonResponse.message\n                })\n            }\n\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n\n\n    }\n\n    addToCart = (productId, price, name, imageUrl) => {\n\n        if(!this.props.auth.isAuthenticated){\n            this.props.history.push('/login');\n            return;\n        }\n\n        const { auth } = this.props;\n        const cartItem = {\n            user: auth.user.userId,\n            product: productId,\n            name: name,\n            imageUrl: imageUrl,\n            quantity: 1,\n            price: price\n        }\n        this.props.addToCart(auth.token, cartItem)\n        .then(response => {\n            //console.log(response);\n            console.log(this.props.cart);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    render(){\n\n        const { product } = this.state;\n\n        let productDescription;\n\n        if(this.state.product){\n            productDescription = \n                <div style={{marginBottom: \"12px\"}} className=\"Content\">\n                    <div style={{marginTop: \"12px\"}} className=\"ProductDetailsWrapper\">\n                        <div className=\"ProductDetailsImage\">\n                            <div className=\"ProductDetailsImageWrapper\">\n                                <img src={product.imageUrl} alt=\"\" />\n                            </div>\n                            <div className=\"ActionButtonWrapper\">\n                                <button  style={{background: '#483D8B'}} onClick={() => { this.addToCart(product._id, product.price, product.name, product.imageUrl) }}><i className=\"fas fa-shopping-cart\"></i>&nbsp;Ajouter au panier</button>\n                                <button style={{background: '#483D8B'}}><i className=\"fas fa-bolt\"></i>&nbsp;Acheter maintenant</button>\n                            </div>\n                        </div>\n                        <div className=\"ProductDetails\">\n                            <div className=\"BreadCrumb\">\n                                <small>Bonne lecture</small>\n                            </div>\n                            <p className=\"ProductTitle\">{product.name}</p>\n                            <p className=\"ProductPrice\">{product.price}€</p>\n                            <div className=\"ProductDescription\">\n                                <h3>Description</h3>\n                                <p>{product.description}</p>\n                            </div>\n                        </div>\n                    </div>\n                {/*   \n                    <div className=\"SimilarProducts\">\n                        <h3>Similar Products</h3>\n                        <div className=\"SimilarProductsWrapper\">\n                            \n                            <div className=\"SimilarProduct\">\n                                <div className=\"SimilarProductImage\">\n                                    <img src=\"https://rukminim1.flixcart.com/image/312/312/jxz0brk0/mobile/u/u/v/realme-3i-rmx1827-original-imafgbbkzrgsstkj.jpeg?q=70\" alt=\"\"/>\n                                </div>\n                                <div className=\"SimilarProductDetails\">\n                                    <h5>Product Name</h5>\n                                    <p>$ 36521</p>\n                                </div>\n                            </div>\n\n                            <div className=\"SimilarProduct\">\n                                <div className=\"SimilarProductImage\">\n                                    <img src=\"https://rukminim1.flixcart.com/image/312/312/jzrb53k0pkrrdj/mobile/e/s/j/mi-redmi-7a-mzb8008in-original-imafg27hramfktfs.jpeg?q=70\" alt=\"\"/>\n                                </div>\n                                <div className=\"SimilarProductDetails\">\n                                    <h5>Product Name</h5>\n                                    <p>$ 36521</p>\n                                </div>\n                            </div>\n                            \n                            <div className=\"SimilarProduct\">\n                                <div className=\"SimilarProductImage\">\n                                    <img src=\"https://rukminim1.flixcart.com/image/495/594/jxgflow0/t-shirt/y/h/g/xxl-tnvgyvnful-d22-tripr-original-imafhuq2s3yxbx2t.jpeg?q=50\" alt=\"\"/>\n                                </div>\n                                <div className=\"SimilarProductDetails\">\n                                    <h5>Product Name</h5>\n                                    <p>$ 36521</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"ProductReviews\">\n                        <h3>Product Reviews</h3>\n                    </div>\n                */}\n                </div>\n        }else{\n            productDescription = <div>Product is loading...!</div>\n        }\n        \n        \n\n        return (\n            <div>\n                <Header/>\n                {productDescription}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (token, cartItem) => dispatch(cartActions.addToCart(token, cartItem)),\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\index.js",["202","203"],"import React, { Component } from 'react';\nimport Header from '../../components/Header/Header';\nimport './style.css';\nimport NormalInput from '../../components/UI/NormalInput';\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport AddressForm from './AddressForm';\nimport CartPrice from '../../components/CartPrice';\nimport DeliveryAddress from './DeliveryAddress';\nimport RadioButton from '../../components/UI/RadioButton';\nimport * as cartActions from '../../store/actions/cartActions';\nimport { base_url } from '../../constants';\n\nclass PlaceOrder extends Component{\n\n    state = {\n        addresses: [],\n        address: {\n            fullName: \"\",\n            mobileNumber: \"\",\n            pinCode: \"\",\n            locality: \"\",\n            address: \"\",\n            cityDistrictTown: \"\",\n            state: \"\",\n            landmark: \"\",\n            alternatePhoneNumber: \"\"\n        },\n        order: [],\n        selectedAddress: '',\n        existingAddress: false,\n        newAddress: false,\n        isAddressConfirm: false,\n        isOrderConfirm: false,\n        selectedPaymentType: 'cod',\n        paymentTypes: [\n            {id: 1, value: 'card', label: 'Credit Card / Debit Card / ATM Card', isActive: false},\n            {id: 2, value: 'netBanking', label: 'Net Banking', isActive: false},\n            {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\n            {id: 4, value: 'cod', label: 'Cash après livraison', isActive: true},\n        ]\n    }\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n                if(result){\n\n                    this.getAddresses();\n\n                }else{\n                    this.props.history.push('/login');\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        }else{\n            this.getAddresses();\n        }\n    }\n\n    getAddresses = () => {\n        const userId = this.props.auth.user.userId;\n        fetch(`${base_url}/user/get-addresses/`+userId, {\n            headers: {\n                'auth-token': this.props.auth.token\n            }\n        })\n        .then(response => {\n            if(response.status == 200){\n                return response.json();\n            }else{\n                throw new Error('Something went wrong');\n            }\n        })\n        .then(jsonResponse => {\n            console.log(jsonResponse)\n            this.setState({\n                addresses: jsonResponse.message.address\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    inputHandler = (e) => {\n        const address = this.state.address;\n        const updatedAddress = {\n            ...address,\n            [e.target.name] :  e.target.value\n        };\n        this.setState({\n            address: updatedAddress\n        })\n    }\n\n    addressSelector = (e) => {\n\n        this.setState({\n            selectedAddress: e.target.value,\n            existingAddress: true,\n            newAddress: false\n        });\n\n    }\n\n    newAddressSelection = (e) => {\n        this.setState({\n            selectedAddress: 'newAddressId',\n            existingAddress: false,\n            newAddress: true\n        });\n    }\n\n    addressSubmitHandler = (e) => {\n        e.preventDefault();\n        console.log(this.state.address)\n\n        const address = {\n            userId: this.props.auth.user.userId,\n            address: this.state.address\n        }\n\n       fetch(`${base_url}/user/new-address`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': this.props.auth.token\n            },\n            method: 'POST',\n            body: JSON.stringify(address)\n       })\n       .then(response => response.json())\n       .then(jsonResponse => {\n           console.log('new address');\n           console.log(jsonResponse);\n           console.log('new address');\n          \n           //this.getAddresses();\n           //console.log(jsonResponse.message);\n           const updatedAddressList = jsonResponse.message.address;\n           this.setState({\n                isAddressConfirm: true,\n                address: {\n                    ...this.state.address,\n                    ...address.address\n                },\n                addresses: updatedAddressList,\n                selectedAddress: updatedAddressList[updatedAddressList.length - 1]._id\n            });\n           \n       })\n       .catch(error => {\n           console.log(error);\n       })\n    }\n\n    confirmDeliveryAddress = () => {\n        this.setState({\n            isAddressConfirm: true\n        });\n\n    }\n\n    confirmOrder = () => {\n        this.setState({\n            isOrderConfirm: true\n        })\n    }\n\n    selectPaymentOption = (e) => {\n        this.setState({\n            selectedPaymentType: e.target.value\n        })\n    }\n\n    submitOrder = async () => {\n\n        if(!this.state.isOrderConfirm){\n            return;\n        }\n\n        if(this.state.selectedPaymentType !== 'cod'){\n            return;\n        }\n        \n        const order = this.props.cart.cartItem.map(item => {\n            return {\n                product: item.product,\n                price: item.price,\n                quantity: item.quantity\n            }\n        });\n\n        try{\n\n            const response = await fetch(`${base_url}/order/create`,{\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': this.props.auth.token\n                },\n                body: JSON.stringify({\n                    user: this.props.auth.user.userId,\n                    address: this.state.selectedAddress,\n                    order: order,\n                    paymentType: 'COD',\n                    paymentStatus: 'pending'\n                }),\n                method: 'POST'\n            });\n\n            const jsonResponse = await response.json();\n            if(response.status === 201){\n                this.props.clearCart();\n                this.props.history.push({\n                    pathname: '/thank-you',\n                    search: '?orderid='+jsonResponse.message._id,\n                    state: jsonResponse.message\n                });\n            }\n\n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n    render() {\n\n        let address;\n        if(this.state.isAddressConfirm && !this.state.newAddress){\n            address = this.state.addresses.find(address => address._id === this.state.selectedAddress);\n        }else{\n            address = this.state.address;\n        }\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"PlaceOrderWrapper\">\n\n                        \n                        <div className=\"DeliveryAddress\">\n\n                            <div className=\"Card\">\n                                <p className=\"CardText\">Login {this.props.auth.isAuthenticated ? <i className=\"fas fa-check\"></i> : null}</p>\n                                <p className=\"CardText\">Email: {this.props.auth.user.email}</p>\n                            </div>\n\n                            {\n                                this.state.isAddressConfirm ? \n                                 <div className=\"Card\">\n                                     <p className=\"CardText\">Delivery Address {this.state.isAddressConfirm ? <i className=\"fas fa-check\"></i> : null}</p>\n                                     <p>\n                                        <span>{`${address.fullName} - ${address.mobileNumber} - `}</span>\n                                        <span>{ `${address.address}, ${address.cityDistrictTown}, ${address.state} - ${address.pinCode}`}</span>\n                                        </p>\n                                 </div> :\n                                 <React.Fragment>\n                                <div className=\"Card\">\n                                    <h4>Delivery Address</h4>\n                                    {\n                                        this.state.addresses.length && this.state.addresses.map(address => \n                                            <DeliveryAddress \n                                                key={address._id} \n                                                onAddressSelection={this.addressSelector} \n                                                value={this.state.selectedAddress}\n                                                address={address} />\n                                        )\n                                    }\n                                    {\n                                        this.state.existingAddress ?\n                                        <div className=\"DeliveryButtonContainer\" >\n                                            <button onClick={this.confirmDeliveryAddress} className=\"DeliveryAddressButton\">Deliver Here</button>\n                                        </div> : null\n                                    }\n                                    \n                                </div>\n                                <div className=\"Card\">\n                                    <div>\n                                        <RadioButton \n                                            name=\"address\"\n                                            label=\"Add new Address\"\n                                            value={this.state.selectedAddress}\n                                            onChange={this.newAddressSelection}\n                                        />\n                                    </div>\n                                    {\n                                        this.state.newAddress ? \n                                            <AddressForm\n                                                address={this.state.address}\n                                                inputHandler={this.inputHandler}\n                                                addressSubmitHandler={this.addressSubmitHandler}\n                                            /> : null\n                                    }\n                                    \n                                    \n                                </div>\n                                </React.Fragment>\n                            }\n                            \n                               \n\n                                {\n                                    this.state.isOrderConfirm ? \n                                    <div className=\"Card\">\n                                        <p className=\"CardText\">Order Summary <i className=\"fas fa-check\"></i> </p>\n                                    </div> : \n                                    this.state.isAddressConfirm ? \n                                    <div className=\"Card\">\n                                        <h4 className=\"CardText\">Order Summary </h4>\n                                        {\n                                            this.props.cart.cartItem.map(item => (\n                                                <div key={item.product} style={{display: 'flex', margin: '5px 0', alignItems: 'center'}}>\n                                                    <div style={{width: '60px', height: '60px', overflow: 'hidden', position: 'relative'}}>\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.imageUrl} alt=\"\" />\n                                                    </div>\n                                                    <div>\n                                                        <h5>{item.name}</h5>\n                                                        <h6>Quantity : {item.quantity}</h6>\n                                                        <h6>${item.total}</h6>\n                                                    </div>\n                                                </div>\n                                            ))\n                                        }\n                                        <button onClick={this.confirmOrder} className=\"ContinueButton\">Continue</button>\n                                    </div>\n                                 : null\n                                }\n                                \n                                {\n                                    this.state.isOrderConfirm ? \n                                    <div className=\"Card\">\n                                    <h4 className=\"CardText\">Payment Option</h4>\n                                    <ul>\n                                        {\n                                            this.state.paymentTypes.map(payment => \n                                            <li className=\"paymentType\" key={payment.id}>\n                                                <RadioButton\n                                                    key={payment.id} \n                                                    name=\"paymentType\"\n                                                    label={payment.label}\n                                                    value={payment.value}\n                                                    onChange={this.selectPaymentOption}\n                                                />\n                                            </li>)\n                                        }\n                                    </ul>\n                                    {\n                                        this.state.selectedPaymentType !== 'cod' ? \n                                        <p className=\"ErrorMessage\">Sorry, Only Cash on Delivery is available</p> : null\n                                    }\n                                    <button className=\"PaymentConfirm\" onClick={this.submitOrder}>Confirm Order</button>\n\n                                </div> : null\n                                }\n                              \n                                \n\n                            \n\n                            \n\n\n\n                            </div>\n\n                                <CartPrice />\n\n                            \n                    </div>\n\n                    \n                   \n                </div>\n                \n            </React.Fragment>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getToken: () => dispatch(authActions.getToken()),\n        clearCart: () => dispatch(cartActions.clearCart())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceOrder);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Orders\\index.js",["204","205","206","207","208","209","210"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport Header from '../../components/Header/Header';\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { base_url } from '../../constants';\n\nclass Orders extends Component{\n\n    state = {\n        ordersList: []\n    }\n\n    componentDidMount(){\n\n        if(!this.props.auth.isAuthenticated){\n            \n                this.props.getToken()\n                .then(result => {\n                    console.log(\"###############\"+result)\n                if(result){\n                    this.getOrders();\n                    console.log(\"standard user: \"+result)\n                }else{\n                    this.props.history.push('/login');\n                }\n            })\n            \n            \n        }else{\n            if(this.props.auth.user.firstName == \"admin\"){\n                this.adminGetAllOrders();\n            }else{\n                this.getOrders();\n            }\n        \n        }\n\n      \n    }\n\n    getOrders = () => {\n        console.log(this.props.auth.isAuthenticated)\n        const token =  this.props.auth.token;\n        console.log(\"my token ord: \"+ token)\n        const userId = this.props.auth.user.userId;\n        fetch(`${base_url}/order/getorders/${userId}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': token\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            console.log(\"get orders: \"+jsonResponse.message);\n            console.log(\"responseorder: \"+JSON.stringify(jsonResponse.message));\n            this.setState({\n                ordersList: jsonResponse.message\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    /****get all orders for administration back office */\n    adminGetAllOrders =  () => {\n        const token =  this.props.auth.token;\n\n        fetch(`${base_url}/order/getusers`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': token\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n           \n                jsonResponse.message.map(user => {\n                \n                fetch(`${base_url}/order/getorders/${user._id}`, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'auth-token': token\n                    }\n                })\n                .then(response => response.json())\n                .then(jsonResponse => {\n                    console.log(\"get all orders for admin: \"+jsonResponse.message);\n                    this.setState(\n                        prevState => ({ ordersList: prevState.ordersList.concat(jsonResponse.message) })\n                    );\n                })\n                .catch(error => {\n                    console.log(error);\n                }) \n            \n            })\n    \n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n    \n\n    formatDate = (date) => {\n        let d = new Date(date);\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    }\n\n    getOrderTotal = (id) => {\n        const singleOrder = this.state.ordersList.find(order => order._id === id);\n        let orderTotal = 0;\n        singleOrder.order.forEach(order => {\n            orderTotal = orderTotal + (order.price * order.quantity)\n        });\n\n        return orderTotal;\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"Card\">\n                        <p className=\"CardText\">Mes Commandes</p>\n\n                        {\n                            this.state.ordersList.map(order => {\n                                return (\n                                    <div key={order._id} className=\"Order\">\n                                        <div className=\"OrderHeader\">\n                                            <a href=\"#\">{order._id}</a>\n                                        </div>\n                                        <div className=\"OrderDescription\">\n                                            <div className=\"od1\">\n                                                <p className=\"odtitle\">Adresse de livraison</p>\n                                                <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\n                                            </div>\n                                            <div className=\"od2\">\n                                                <p className=\"odtitle\">Type de paiement</p>\n                                                <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\n                                            </div>\n                                            <div className=\"od3\">\n                                                <p className=\"odtitle\" >Statut du paiment</p>\n                                                <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\n                                            </div>\n                                        \n                                        </div>\n                                        <div>\n                                            {order.order.map(item => (\n                                                <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\n                                                    <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\n                                                    </div>\n                                                    <div>\n                                                        <p className=\"odtitle\">{item.product.name}</p>\n                                                        <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\n                                                        <p>Quantité: {item.quantity}</p>\n                                                        <p>{item.price * item.quantity}€</p>\n                                                        </div>\n                                                       \n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                        <div className=\"OrderFooter\">\n                                            <p>Commande passée le <span>{this.formatDate(order.orderDate)}</span></p>\n                                            <p>Total de la commande <span>{this.getOrderTotal(order._id)}€</span></p>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\cartActions.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\Header.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\constants\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\MobileTypeInput\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\RadioButton\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\TopHeader\\TopHeader.js",["211"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as authActions from '../../../store/actions/authActions';\nimport './style.css';\n\nimport { connect } from 'react-redux';\n\nclass TopHeader extends Component{\n\n    componentDidMount() {\n        this.props.getToken();\n    }\n\n\n    render() {\n        let guestAccount = <ul className=\"Dropdown Account\">\n                                <li><Link to=\"/signup\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>S'inscrire</span></Link></li>\n                                <li><Link to=\"/login\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>Se connecter</span></Link></li>\n                            </ul>;  \n       \n        if(this.props.auth.isAuthenticated){\n\n           if(this.props.auth.user.firstName==\"admin\"){\n               guestAccount = <ul className=\"Dropdown Account\">\n               <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\n               <li><Link to=\"/manageusers\"><i className=\"fas fa-users\"></i>&nbsp;&nbsp;<span>Utilisateurs</span></Link></li>\n               <li><Link to=\"/manageproducts\"><i className=\"fas fa-book\"></i>&nbsp;&nbsp;<span>Produits</span></Link></li>\n               <li><Link to=\"\" onClick={() => this.props.logout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\n           </ul>;\n           }else{\n                guestAccount = <ul className=\"Dropdown Account\">\n                <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\n                <li><Link to=\"\" onClick={() => this.props.logout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\n            </ul>; \n           }\n               \n            \n\n          \n                \n            \n        }\n\n        return (\n            <div className=\"TopHeader\">\n                <div className=\"SocialMediaIcons\">\n                <ul className=\"TopMenu\">\n                    <i className=\"fab fa-facebook-f\"></i>\n                    <i className=\"fab fa-google-plus-g\"></i>\n                    <i className=\"fab fa-instagram\"></i>\n                    <i className=\"fab fa-youtube\"></i>\n                </ul>\n                </div>\n                <div>\n                    <ul className=\"TopMenu\">\n                        <li className=\"MenuItem\">\n                            <i className=\"fas fa-user-circle\" ></i>&nbsp;&nbsp;\n                            <Link to=\"/account\">{this.props.auth.isAuthenticated ? this.props.auth.user.firstName: 'Mon compte'}</Link>\n        \n                            {guestAccount}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopHeader);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\Products\\Product\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\App.js",["212"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from '../PrivateRoute';\nimport Shop from './Shop';\nimport Login from './Login';\nimport Signup from './Signup';\nimport ForgetPassword from './ForgetPassword';\nimport ControlPanel from './ControlPanel';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducers from '../store/reducers/authReducers'; \nimport productReducers from '../store/reducers/productReducers';\nimport ProductDetails from './ProductDetails';\nimport Home from './Home';\nimport Cart from './Cart';\nimport cartReducers from '../store/reducers/cartReducers';\nimport PlaceOrder from './PlaceOrder';\nimport ThankYou from './ThankYou';\nimport Orders from './Orders';\n\n//Product reducer for admin\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productSaveReducer,\n  productDeleteReducer,\n  productReviewSaveReducer,\n  categoryListReducer\n} from './Products/ProdReducer';\n\nconst rootReducers = combineReducers({\n  auth: authReducers,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productSave: productSaveReducer,\n  productDelete: productDeleteReducer,\n  categoryList: categoryListReducer,\n  productReviewSave: productReviewSaveReducer,\n  products: productReducers,\n  cart: cartReducers\n});\n\nconst store = createStore(rootReducers, applyMiddleware(thunk));\n\nwindow.store = store;\n\nfunction App() {\n  return (\n\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n            <Switch>\n              \n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/forget-password\" component={ForgetPassword} />\n              <Route path=\"/cpanel\" component={ControlPanel} />\n              <Route path=\"/products/:category/:slug\" component={ProductDetails} />\n              <Route path=\"/products\"  component={Shop} />\n              <PrivateRoute path=\"/cart\" component={Cart} />\n              <PrivateRoute path=\"/place-order\" component={PlaceOrder} />\n              <PrivateRoute path=\"/thank-you\" component={ThankYou} />\n              <PrivateRoute path=\"/orders\" component={Orders} />\n              <Route path=\"/\"  component={Shop} />         \n                         \n            </Switch>\n                     \n        </div>\n      </Router>\n    </Provider>\n      \n    \n    \n  );\n}\n\nexport default App;\n","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\ThankYou\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Shop\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\productActions.js",["213","214","215"],"import { base_url } from \"../../constants\";\n\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const GET_PRODUCT_CATEGORIES = 'GET_PRODUCT_CATEGORIES';\n\nexport const getProducts = (categorySlug = '', filter) => {\n    return async dispatch => {\n\n        try{\n\n            categorySlug = (categorySlug == 'all') ? '' : categorySlug;\n\n            let query = '';\n            if(filter){\n                query = '?filter=1&'\n                for(let prop in filter){\n                    query += `${prop}=${filter[prop]}&`\n                }\n                query = query.substring(0, query.length-1);\n            }\n\n            const response = await fetch(`${base_url}/products/${categorySlug}${query}`);\n            const jsonResponse = await response.json();\n            if(response.status == 200){\n                dispatch({\n                    type: GET_PRODUCTS,\n                    products: jsonResponse.message\n                });\n            }\n\n            return jsonResponse;\n\n        }catch(error){\n            console.log(error);\n        }\n\n    }\n}\n\nexport const getCategories = () => {\n    return dispatch => {\n        fetch(`${base_url}/category`, {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            dispatch({\n                type: GET_PRODUCT_CATEGORIES,\n                categories: jsonResponse.message\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n}\n\nexport const getSingleProduct = (productSlug) => {\n    return async dispatch => {\n        try{\n\n            const response = await fetch(`${base_url}/products/category/${productSlug}`);\n            const jsonResponse = await response.json();\n            if(response.status === 200){\n\n               \n\n            }\n\n\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\n","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\AddressForm\\index.js",["216"],"import React, { Component } from 'react';\nimport NormalInput from '../../../components/UI/NormalInput';\n\n\nconst AddressForm = props =>  {\n\n        const {address} = props;\n     \n\n        return (\n            <form onSubmit={props.addressSubmitHandler}>\n                 <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"fullName\"\n                                value={address.fullName}\n                                placeholder={'Full Name'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"mobileNumber\"\n                                value={address.mobileNumber}\n                                placeholder={'10-digit Mobile Number'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"pinCode\"\n                                value={address.pinCode}\n                                placeholder={'Pincode'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"locality\"\n                                value={address.locality}\n                                placeholder={'Locality'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                    </div>\n    \n                    <div className=\"Row\">\n                        <NormalInput \n                                name=\"address\"\n                                value={address.address}\n                                placeholder={'Address (Area and Street)'}\n                                inputHandler={props.inputHandler}\n                                type=\"textarea\"\n                                style={{height: '60px'}}\n                        />\n                    </div>\n    \n                    <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"cityDistrictTown\"\n                                value={address.cityDistrictTown}\n                                placeholder={'City/District/Town'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"state\"\n                                value={address.state}\n                                placeholder={'State'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                    </div>\n    \n                    <div className=\"Row\">\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"landmark\"\n                                value={address.landmark}\n                                placeholder={'Landmark (Optional)'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div style={{width: '49%'}}>\n                            <NormalInput \n                                name=\"alternatePhoneNumber\"\n                                value={address.alternateNumber}\n                                placeholder={'Alternate Phone (Optional)'}\n                                inputHandler={props.inputHandler}\n                                type=\"text\"\n\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"Row\">\n                        <button className=\"DeliveryAddressButton\">SAVE AND DELIVER HERE</button>\n                    </div>\n\n            </form>\n           \n        );\n    \n    \n}\n\nexport default AddressForm;","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\UI\\SubmitGradientButton\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\BottomHeader\\BottomHeader.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\index.js",["217"],"import React, { Component } from 'react';\nimport Header from '../../components/Header/Header';\nimport './style.css';\nimport CartItem from './CartItem';\nimport * as cartActions from '../../store/actions/cartActions';\nimport * as authActions from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport CartPrice from '../../components/CartPrice';\n\nclass Cart extends Component{\n\n    state = {\n        cartItems: []\n    }\n\n    decreaseQuantity = (e, productId) => {\n        this.updateCart(productId, -1);\n    }\n\n    increaseQuantity = (e, productId) => {\n        this.updateCart(productId, 1);\n    }\n\n    updateCart = async (productId, quantity) => {\n        try{\n            const auth = this.props.auth;\n            let product = this.state.cartItems.find(item => item.product === productId);\n            product = {\n                productId: product.product,\n                quantity: parseInt(product.quantity) + parseInt(quantity),\n                newQuantity: quantity,\n                price: product.price,\n                total: parseFloat(product.total) + parseFloat( product.price * quantity )\n            }\n            if(product.quantity <= 0){\n                return;\n            }\n            const response = await this.props.updateCart(auth.token, auth.user.userId, product);\n            if(response.ok == 1){\n                const {cartItems} = this.state;\n                this.setState({\n                    cartItems: cartItems.map(item => item.product === productId ? \n                        {...item, quantity: item.quantity + quantity, total: item.total + (item.price * quantity)}: item)\n                })\n            }\n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n    changeQuantity = (e, productId) => {\n\n        // console.log(e.target.value);\n\n        // if(isNaN(e.target.value)){\n        //     return;\n        // }\n\n        // const firstDigit = parseInt(e.target.value.split(\"\")[0]);\n        // if(firstDigit === 0){\n        //     return;\n        // }\n\n        // //alert(e.target.value);\n\n        // this.updateCart(productId, parseInt(e.target.value));\n    }\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated){\n            this.props.getToken()\n            .then(result => {\n                if(result){\n                    const cartItems = this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId);\n                    return cartItems;\n                }\n                return [];\n            })\n            .then(cartItems => {\n                if(cartItems.cart.length > 0){\n\n                    console.log(this.props.cart)\n\n                    this.setState({\n                        cartItems: this.props.cart.cartItem\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        }else{\n            this.setState({\n                cartItems: this.props.cart.cartItem\n            })\n        }\n    }\n\n    render (){\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"CartWrapper\">\n                        <div className=\"CartDetails\">\n                            {/* List cart items */}\n                            <div className=\"CardTitle\">\n                                <h3>Mon panier</h3>\n                            </div>\n                            <div className=\"CardBody\">\n\n                                {\n                                    this.state.cartItems.map(product => \n                                        <CartItem\n                                            key={product.product}\n                                            productId={product.product}\n                                            name={product.name}\n                                            imageUrl={product.imageUrl}\n                                            price={product.price}\n                                            quantity={product.quantity}\n                                            total={product.total}\n                                            //name=\"quantity\" \n                                            changeQuantity={this.changeQuantity}\n                                            increaseQuantity={this.increaseQuantity}\n                                            decreaseQuantity={this.decreaseQuantity}\n                                    />)\n                                }\n                                \n\n                                <div className=\"PlaceOrder\">\n                                    <button className=\"PlaceOrderButton\" onClick={() => this.props.history.push('/place-order')}>Passer la commande</button>\n                                </div>\n\n                            </div>\n                        </div>\n                        \n                        <CartPrice />\n\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        cart: state.cart\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n        updateCart: (token, userId, product) => dispatch(cartActions.updateCart(token, userId, product)),\n        getToken: () => dispatch(authActions.getToken())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\store\\actions\\authActions.js",["218","219"],"import { base_url } from \"../../constants\";\n\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const signup = (user) => {\n    return async dispatch => {\n        try{\n           const response = await fetch(`${base_url}/user/signup`, {\n               headers: {\n                   'Content-Type': 'application/json',\n                   'Accepts': 'application/json'\n               },\n               method: 'POST',\n               body: JSON.stringify({\n                   firstName: user.firstName,\n                   lastName: user.lastName,\n                   email: user.email,\n                   password: user.password\n               })\n           });\n           const jsonResponse = await response.json();\n           return jsonResponse;\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\nexport const authenticate = (email, password) => {\n    return async dispatch => {\n\n        var response = \"\"\n\n        console.log(email)\n        if(email==\"axdev2020@gmail.com\"){\n            console.log('aa'+email)\n             response = await fetch(`${base_url}/admin/login`, {\n                headers: {\n                    'Content-Type' : 'application/json',\n                    'Accepts': 'application/json'\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            }); \n        }else{\n             response = await fetch(`${base_url}/user/login`, {\n                headers: {\n                    'Content-Type' : 'application/json',\n                    'Accepts': 'application/json'\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            });\n        }\n       \n        const jsonResponse = await response.json();\n        if(response.status === 200){\n\n            window.localStorage.setItem('auth', JSON.stringify(response.message));\n\n            dispatch({\n                type: AUTHENTICATE_USER,\n                auth: jsonResponse.message\n            });\n        }\n\n        return jsonResponse.message;\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        const authData = window.localStorage.getItem('auth');\n        if(authData){\n            window.localStorage.clear();\n            dispatch({\n                type: LOGOUT_USER,\n                payload: ''\n            });\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(false);\n    }\n}\n\nexport const getToken = () => {\n    return dispatch => {\n        const authData = window.localStorage.getItem('auth');\n\n        if(authData){\n            const auth = JSON.parse(authData);\n            if(auth.hasOwnProperty('token') && auth.token != ''){\n                dispatch({\n                    type: AUTHENTICATE_USER,\n                    auth: auth\n                });\n\n                return Promise.resolve(true);\n\n            }\n        }\n        \n        return Promise.resolve(false);\n        \n    }\n}\n\n","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Logo\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\ShopStore\\ShopStore.js",["220"],"import React, { Component } from 'react';\nimport './style.css';\nimport Products from './Products/Products';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport * as authAtions from '../../store/actions/authActions';\n\nimport ProductsScreen from '../../containers/Products/ProductsScreen'\nimport { connect } from \"react-redux\";\n\n\nclass ShopStore extends Component{\n\n    state={\n        categoryTitle: 'Products'\n    }\n\n    render() {\n\n        console.log('Parents');\n        console.log(this.props);\n\n        return (\n            <React.Fragment>\n                <Header/>\n                <Switch>\n                    <Route path=\"/\" exact component={Products} />\n                    <Route path=\"/products\" exact component={Products} />\n                    <Route path=\"/products/:slug\" component={Products} />\n                    <Route path=\"/manageproducts\" exact component={ProductsScreen} />\n                </Switch>\n            </React.Fragment>\n            \n        );\n    }\n}\n\n\n\nexport default connect(null, null)(ShopStore);","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\PlaceOrder\\DeliveryAddress\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Cart\\CartItem\\index.js",["221"],"import React from 'react';\nimport QuantityControl from '../../../components/QuantityControl';\n\nimport './style.css';\n\nconst CartItem = props => {\n    return (\n        <div className=\"SingleItem\">\n            <div className=\"ItemWrapper\">\n                <div className=\"ItemImage\" style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}}>\n                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={props.imageUrl} alt=\"\" />\n                </div>\n                <div className=\"ItemDetails\">\n                    <p className=\"ItemName\">{props.name}</p>\n                    <p className=\"ItemPrice\">{props.total}€</p>\n                </div>\n            </div>\n            <div className=\"CartActionButtons\">\n                <QuantityControl\n                    productId={props.productId}\n                    name={props.name} \n                    quantity={props.quantity}\n                    changeQuantity={props.changeQuantity}\n                    increaseQuantity={props.increaseQuantity}\n                    decreaseQuantity={props.decreaseQuantity}\n                />\n                <a href=\"#\">Supprimer</a>\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem;","C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Header\\MainHeader\\MainHeader.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Signup\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\Error\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\components\\QuantityControl\\index.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsScreen.js",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsActions.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProductsConstants.js",[],"C:\\projects\\NodeJS\\mendpress\\press\\frontend\\src\\containers\\Products\\ProdReducer.js",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"237","replacedBy":"241"},{"ruleId":"239","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":15,"column":52,"nodeType":"245","messageId":"246","endLine":15,"endColumn":54},{"ruleId":"243","severity":1,"message":"247","line":34,"column":41,"nodeType":"245","messageId":"246","endLine":34,"endColumn":43},{"ruleId":"243","severity":1,"message":"244","line":42,"column":51,"nodeType":"245","messageId":"246","endLine":42,"endColumn":53},{"ruleId":"248","severity":1,"message":"249","line":91,"column":9,"nodeType":"250","messageId":"251","endLine":92,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":18},{"ruleId":"252","severity":1,"message":"256","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":19},{"ruleId":"243","severity":1,"message":"244","line":72,"column":32,"nodeType":"245","messageId":"246","endLine":72,"endColumn":34},{"ruleId":"252","severity":1,"message":"257","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"244","line":32,"column":47,"nodeType":"245","messageId":"246","endLine":32,"endColumn":49},{"ruleId":"258","severity":1,"message":"259","line":80,"column":47,"nodeType":"260","messageId":"261","endLine":80,"endColumn":49},{"ruleId":"262","severity":1,"message":"263","line":137,"column":45,"nodeType":"264","endLine":137,"endColumn":57},{"ruleId":"262","severity":1,"message":"265","line":146,"column":49,"nodeType":"264","endLine":146,"endColumn":93},{"ruleId":"262","severity":1,"message":"265","line":150,"column":49,"nodeType":"264","endLine":150,"endColumn":93},{"ruleId":"266","severity":1,"message":"267","line":158,"column":57,"nodeType":"264","endLine":158,"endColumn":203},{"ruleId":"243","severity":1,"message":"244","line":23,"column":45,"nodeType":"245","messageId":"246","endLine":23,"endColumn":47},{"ruleId":"252","severity":1,"message":"268","line":16,"column":8,"nodeType":"254","messageId":"255","endLine":16,"endColumn":12},{"ruleId":"243","severity":1,"message":"244","line":11,"column":42,"nodeType":"245","messageId":"246","endLine":11,"endColumn":44},{"ruleId":"243","severity":1,"message":"244","line":24,"column":32,"nodeType":"245","messageId":"246","endLine":24,"endColumn":34},{"ruleId":"252","severity":1,"message":"269","line":65,"column":19,"nodeType":"254","messageId":"255","endLine":65,"endColumn":31},{"ruleId":"252","severity":1,"message":"270","line":1,"column":17,"nodeType":"254","messageId":"255","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":39,"column":28,"nodeType":"245","messageId":"246","endLine":39,"endColumn":30},{"ruleId":"243","severity":1,"message":"244","line":36,"column":17,"nodeType":"245","messageId":"246","endLine":36,"endColumn":19},{"ruleId":"243","severity":1,"message":"247","line":99,"column":59,"nodeType":"245","messageId":"246","endLine":99,"endColumn":61},{"ruleId":"252","severity":1,"message":"271","line":6,"column":13,"nodeType":"254","messageId":"255","endLine":6,"endColumn":23},{"ruleId":"262","severity":1,"message":"263","line":27,"column":17,"nodeType":"264","endLine":27,"endColumn":29},{"ruleId":"252","severity":1,"message":"272","line":11,"column":8,"nodeType":"254","messageId":"255","endLine":11,"endColumn":13},{"ruleId":"252","severity":1,"message":"273","line":34,"column":10,"nodeType":"254","messageId":"255","endLine":34,"endColumn":19},{"ruleId":"252","severity":1,"message":"274","line":34,"column":21,"nodeType":"254","messageId":"255","endLine":34,"endColumn":33},{"ruleId":"252","severity":1,"message":"275","line":36,"column":10,"nodeType":"254","messageId":"255","endLine":36,"endColumn":20},{"ruleId":"252","severity":1,"message":"276","line":41,"column":10,"nodeType":"254","messageId":"255","endLine":41,"endColumn":17},{"ruleId":"252","severity":1,"message":"277","line":48,"column":14,"nodeType":"254","messageId":"255","endLine":48,"endColumn":25},{"ruleId":"252","severity":1,"message":"278","line":50,"column":12,"nodeType":"254","messageId":"255","endLine":50,"endColumn":21},{"ruleId":"252","severity":1,"message":"279","line":55,"column":14,"nodeType":"254","messageId":"255","endLine":55,"endColumn":27},{"ruleId":"252","severity":1,"message":"280","line":57,"column":12,"nodeType":"254","messageId":"255","endLine":57,"endColumn":23},{"ruleId":"281","severity":1,"message":"282","line":69,"column":6,"nodeType":"283","endLine":69,"endColumn":34,"suggestions":"284"},{"ruleId":"258","severity":1,"message":"259","line":110,"column":26,"nodeType":"260","messageId":"261","endLine":110,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":112,"column":20,"nodeType":"245","messageId":"246","endLine":112,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":124,"column":26,"nodeType":"260","messageId":"261","endLine":124,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":126,"column":28,"nodeType":"260","messageId":"261","endLine":126,"endColumn":30},{"ruleId":"243","severity":1,"message":"244","line":127,"column":21,"nodeType":"245","messageId":"246","endLine":127,"endColumn":23},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],["285"],["286"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'NormalInput' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Home' is defined but never used.","'jsonResponse' is assigned a value but never used.","'Component' is defined but never used.","'authAtions' is defined but never used.","'axios' is defined but never used.","'uploading' is assigned a value but never used.","'setUploading' is assigned a value but never used.","'deleteItem' is assigned a value but never used.","'loading' is assigned a value but never used.","'loadingSave' is assigned a value but never used.","'errorSave' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["287"],"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},"Update the dependencies array to be: [successSave, successDelete, dispatch, token]",{"range":"290","text":"291"},[2309,2337],"[successSave, successDelete, dispatch, token]"]